@page "/"
@using tasktServer.Shared
@using Radzen;
@inject HttpClient Http

<div class="jumbotron">
    <h1>tasktServer</h1>
    <p>
        The most popular open-source process automation platform*
    </p>
    <sub>*people just dont know it yet!</sub>
</div>


<h2>Bot Runtime Summary</h2>
<p>The following section provides a summary regarding bot performance. Once properly configured, your bots will call into the platform when they start running and finish running processes. The platform will automatically close any tasks out if the bot fails to provide a completion status upon the next time the bot indicates it is starting to run a new task.</p>

    <div>
       On Or After <Radzen.Blazor.RadzenDatePicker @bind-Value="value" DateFormat="MM/dd/yyyy" Change="@(args => Change(args))" />
    </div>


<MetricCard MetricName="Running" API="api/Tasks/Metrics/Running" StartDate="@value" Description="Depicts the amount of tasks that are currently running."></MetricCard>
<MetricCard MetricName="Completed" API="api/Tasks/Metrics/Completed" StartDate="@value" Description="Depicts the amount of tasks that have completed successfully."></MetricCard>
<MetricCard MetricName="Errored" API="api/Tasks/Metrics/Errored" StartDate="@value" Description="Depicts the amount of tasks that experienced an error."></MetricCard>
<MetricCard MetricName="Closed" API="api/Tasks/Metrics/Closed" StartDate="@value" Description="Depicts the amount of tasks that were not updated after starting."></MetricCard>




@code{
    DateTime value = DateTime.Today;
    void Change(DateTime? value)
    {
        StateHasChanged();
    }
}